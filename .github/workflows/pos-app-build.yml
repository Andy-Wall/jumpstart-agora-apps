name: Build contososupermarket app - staging

on:
  push:
        branches:
            - main
  workflow_dispatch: {}

permissions:
    contents: write
    pull-requests: write

jobs:
  build-and-deploy-staging-image:
      if: ${{ github.repository != 'microsoft/jumpstart-agora-apps' }}
      runs-on: ubuntu-latest
      steps:
      # checkout the repo
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: 'Login to ACR'
        uses: azure/docker-login@v1
        with:
          login-server: "${{ secrets.ACR_NAME }}.azurecr.io"
          username: ${{ secrets.SPN_CLIENT_ID }}
          password: ${{ secrets.SPN_CLIENT_SECRET }}

      - name: 'Build and push image staging image'
        env:
          GITHUB_BRANCH: 'staging'
        run: |
          docker build ./contoso_supermarket/developer/pos/src -t "${{ secrets.ACR_NAME }}.azurecr.io/$GITHUB_BRANCH/contoso-supermarket/pos:v1.0"
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/$GITHUB_BRANCH/contoso-supermarket/pos:v1.0

      - name: 'Checkout staging branch'
        uses: actions/checkout@v3
        with:
          ref: 'staging'

      - name: Replace ACR with the correct name
        continue-on-error: true
        env:
            ACR_NAME: ${{ secrets.ACR_NAME }}
        run: |
            defaultLine="acr_name: __jumpstartagora__"
            file=$(find . -type f -name "staging.yaml")
            acrLine=$(find . -type f -name "staging.yaml" -print0 | grep "acr_name" "$file" | sed 's/^ *//')
            newLine=$(echo $acrLine | sed -i "s#$acrLine#$defaultLine#g" $file)
            find . -type f -name "staging.yaml" -print0 | xargs -0 sed -i "s/__jumpstartagora__/$ACR_NAME/g"

      - name: Replace GitHub account with the correct name
        continue-on-error: true
        run: |
            find . -type f -name "Chart.yaml" -print0 | xargs -0 sed -i "s/__github_account__/$GITHUB_REPOSITORY_OWNER/g"

      - name: Replace GitHub branch with the correct name
        continue-on-error: true
        env:
            GITHUB_BRANCH: 'staging'
        run: |
            find . -type f -name "Chart.yaml" -print0 | xargs -0 sed -i "s/__branch__/$GITHUB_BRANCH/g"

      - name: Replace Cosmos DB endpoint with the correct URL
        continue-on-error: true
        env:
            COSMOS_ENDPOINT: ${{ secrets.COSMOS_DB_ENDPOINT }}
        run: |
            defaultLine="endpoint: __cosmosdbendpoint__"
            file=$(find . -type f -name "staging.yaml")
            endpointLine=$(find . -type f -name "staging.yaml" -print0 | grep "endpoint:" "$file" | sed 's/^ *//')
            newLine=$(echo $endpointLine | sed -i "s#$endpointLine#$defaultLine#g" $file)
            find . -type f -name "staging.yaml" -print0 | xargs -0 sed -i "s/__cosmosdbendpoint__/$COSMOS_ENDPOINT/g"

      - name: Commit and push changes
        uses: devops-infra/action-commit-push@master
        continue-on-error: true
        with:
            github_token: ${{ secrets.PAT_GITHUB }}
            commit_message: Push changes
            target_branch: staging

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v3
        with:
            token: ${{ secrets.PAT_GITHUB }}
            title: "Add auto-approved feature"
            body: "This pull request adds an auto-approved feature to the project."
            base: "main"
            branch: "staging"
            labels: "auto-approve"

      - name: Auto-approve PR
        if: steps.create_pr.outputs.pull-request-number
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
