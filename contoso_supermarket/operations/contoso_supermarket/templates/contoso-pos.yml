# Postgre SQL Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-contosodb
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Release.Name }}-contosodb
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
---
# Create PostgreSQL Database Container with local storage
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-contosodb
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-contosodb
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-contosodb
    spec:
      containers:
      - name: contosodb
        image: postgres:15.0
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.username }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgrespw
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: contoso
        ports:
        - containerPort: 5432
        volumeMounts:
          - name: {{ .Release.Name }}-postgresql-vol
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: {{ .Release.Name }}-postgresql-vol
          hostPath:
            path: /var/postgresql-data
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-db-sql-file
data:
  initDB.sql: |-
{{ .Files.Get "files/initdb.sql" | indent 4 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-init-db
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-init-db
    spec:
      containers:
      - name: initdb
        image: postgres:15.0
        env:
        - name: PGHOST
          value: {{ .Release.Name }}-contosodb
        - name: POSTGRES_USER
          value: {{ .Values.postgres.username }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgrespw
              key: POSTGRES_PASSWORD
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgrespw
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: {{ .Values.postgres.database }}
        command:
          - sh
          - -c
          - psql -h $PGHOST -U $POSTGRES_USER -d $POSTGRES_DB -f /var/initdb.sql
        volumeMounts:
          - name: init-db-sql
            mountPath: /var/initdb.sql
            subPath: initDB.sql
      restartPolicy: "Never"
      volumes:
        - name: init-db-sql
          configMap:
            name: init-db-sql-file
            items:
            - key: initDB.sql
              path: initDB.sql
---
# Create Contoso Supermarket Queue Monitoring Backend Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-queue-monitoring-backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-queue-monitoring-backend
spec:
  selector:
    app: {{ .Release.Name }}-queue-monitoring-backend
  ports:
  - name: http
    port: 4000
    targetPort: 4000
---
# Create Contoso Supermarket Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-queue-monitoring-backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-queue-monitoring-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-queue-monitoring-backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-queue-monitoring-backend
    spec:
      containers:
        - name: queue-monitoring-backend
          image: {{ .Values.acr_name }}.azurecr.io/{{ .Values.branch_name}}/contoso-supermarket/queue-monitoring-backend:v1.0
          env:
            - name: SQL_HOST
              value: {{ .Release.Name }}-contosodb
            - name: SQL_USERNAME
              value: {{ .Values.postgres.username }}
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgrespw
                  key: POSTGRES_PASSWORD
            - name: SQL_DATABASE
              value: {{ .Values.postgres.database }}
            - name: ASPNETCORE_URLS
              value : "http://*:4000/"
          ports:
            - containerPort: 4000
      imagePullSecrets:
            - name: acr-secret
---
# Create Contoso Supermarket Queue Monitoring Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-queue-monitoring-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-queue-monitoring-frontend
spec:
  selector:
    app: {{ .Release.Name }}-queue-monitoring-frontend
  ports:
  - name: http
    port: 81
    targetPort: 8080
  type: LoadBalancer
---
# Create Contoso Supermarket Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-queue-monitoring-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-queue-monitoring-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-queue-monitoring-frontend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-queue-monitoring-frontend
    spec:
      containers:
        - name: queue-monitoring-frontend
          image: {{ .Values.acr_name }}.azurecr.io/{{ .Values.branch_name}}/contoso-supermarket/queue-monitoring-frontend:v1.0
          env:
            - name: BACKEND_API_URL
              value: "http://{{ .Release.Name }}-queue-monitoring-backend:4000"
            - name: BACKEND_API_HOST
              value: "{{ .Release.Name }}-queue-monitoring-backend"
            - name: AI_API_URL
              value: "http://{{ .Release.Name }}-contosoai:8000"
            - name: AI_API_HOST
              value: "{{ .Release.Name }}-contosoai"
            - name: REACT_APP_LIVE_VIEW_ENABLED
              value: "{{ .Values.queue_monitoring_frontend.live_view_enabled }}"
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: acr-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cloudsync
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-cloudsync
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-cloudsync
    spec:
      containers:
        - name: cloudsync
          image: {{ .Values.acr_name }}.azurecr.io/{{ .Values.branch_name}}/contoso-supermarket/pos-cloudsync:v1.0
          env:
          - name: SQL_HOST
            value: {{ .Release.Name }}-contosodb
          - name: SQL_USERNAME
            value: {{ .Values.postgres.username }}
          - name: SQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgrespw
                key: POSTGRES_PASSWORD     
          - name: SQL_DATABASE
            value: {{ .Values.postgres.database }}
          - name: SYNCINTERVAL
            value: '120'
          - name: COSMOSENDPOINT
            value: {{ required "A valid Cosmos container is required! (Set cosmos.endpoint)" .Values.cosmos.endpoint }}
          - name: COSMOSKEY
            valueFrom:
              secretKeyRef:
                name: cosmoskey
                key: COSMOS_KEY     
          - name: COSMOSDB
            value: {{ required "A valid Cosmos container is required! (Set cosmos.database)" .Values.cosmos.database }}
          - name: COSMOSCONTAINER
            value: {{ required "A valid Cosmos container is required! (Set cosmos.container)" .Values.cosmos.container }}
      imagePullSecrets:
        - name: acr-secret
---
# Create Contoso Supermarket Point Of Sale Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-contosopos
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-contosopos
spec:
  selector:
    app: {{ .Release.Name }}-contosopos
  ports:
  - name: http
    port: 5000
    targetPort: 5000
  type: LoadBalancer
---
# Create Contoso Supermarket Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-contosopos
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-contosopos
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-contosopos
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-contosopos
    spec:
      containers:
        - name: contosopos
          image: "{{ .Values.acr_name }}.azurecr.io/{{ .Values.branch_name}}/contoso-supermarket/pos:{{ .Values.image_tag}}"
          env:
            - name: SQL_HOST
              value: {{ .Release.Name }}-contosodb
            - name: SQL_USERNAME
              value: {{ .Values.postgres.username }}
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgrespw
                  key: POSTGRES_PASSWORD
            - name: SQL_DATABASE
              value: {{ .Values.postgres.database }}
            - name: HEAD_TITLE
              value : {{ .Values.point_of_sale.title }}
            - name: CAMERAS_ENABLED
              value: "{{ .Values.point_of_sale.cameras_enabled }}"
            - name: CAMERAS_BASEURL
              value: {{ .Values.point_of_sale.cameras_url }}
            - name: NEW_CATEGORY
              value: "{{ .Values.point_of_sale.new_category }}"
            - name: STORE_ID
              value: "{{ required "A Store ID is required!" .Values.point_of_sale.store_id }}"
            - name: STORE_LOCATION
              value: "{{ required "A Store Location is required!" .Values.point_of_sale.store_location }}"
            - name: HOLIDAY_BANNER
              value: "{{ .Values.point_of_sale.holiday_banner }}"
          ports:
            - containerPort: 5000
      imagePullSecrets:
        - name: acr-secret
---
# Create Contoso Supermarket AI app
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-contosoai
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-contosoai
spec:
  selector:
    app: {{ .Release.Name }}-contosoai
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  type: LoadBalancer
---
# Create Contoso Supermarket Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-contosoai
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-contosoai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-contosoai
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-contosoai
    spec:
      containers:
        - name: contosoai
          image: {{ .Values.acr_name }}.azurecr.io/{{ .Values.branch_name}}/contoso-supermarket/contosoai:v1.0
          ports:
            - containerPort: 8000
      imagePullSecrets:
        - name: acr-secret
